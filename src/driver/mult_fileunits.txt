from:  https://people.sc.fsu.edu/~jburkardt/f77_src/files_multiple/files_multiple.html

FILES_MULTIPLE is a FORTRAN77 program which demonstrates how a program can open multiple output files at one time, and write data to any one specific file it chooses.

To write data to a file, a FORTRAN90 program needs a filename, an open() statement that assigns a unique unit number to that filename, and write() statements that send data to the file identified by unit number.

To handle two or three files is easy, but to handle an arbitrary number of files requires a little planning.

Supposing we need "n" files, we can create a "template" filename with some zeros in it, like "file00.txt", and call a function like "filename_inc()" which, each time, will return a filename with the numeric text incremented by 1:

        file01.txt
        file02.txt
        file03.txt
        ...
      
The filenames can be stored in a character array of dimension n, which might be called "filename".
In order to store the unique unit number of each file, we can simply try to set the first file to unit 1, the second to unit 2, and so on. (For some versions of FORTRAN, this might cause problems, in which case, a function called get_unit() can be used instead.) The unit numbers can be stored in an integer vector of dimension n, which might be called "fileunit".

Now we use a loop from 1 to n, to open the files:

        do i = 1, n
          open ( unit = fileunit(i), file = filename(i), status = 'replace' )
        end do
      
At this point, to write data to the 17th file, we would use a statement like:

        write ( unit(17), '(2g14.6)' ) x, y
      
When we are all done, we need to close the files:

        do i = 1, n
          close ( unit = fileunit(i) )
        end do
